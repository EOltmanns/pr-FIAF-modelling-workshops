name: validate-compile
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
jobs:
  validate:
    runs-on: ubuntu-latest 
    steps:
    - name: checkout repo
      uses: actions/checkout@v3
    - name: install rdflib
      run: pip3 install rdflib
    - name: compile graph and validate
      uses: jannekem/run-python-script-action@v1
      with:
        script: |
          
          # import libraries
          
          import pathlib
          import rdflib
          
          # compile class files
          
          class_dir = pathlib.Path.cwd() / 'classes'
          classes = [x for x in class_dir.iterdir() if x.suffix == '.ttl']
          
          # load into graph, will throw syntax errors
          
          graph = rdflib.Graph()        
          for x in classes:
            graph.parse(x)
        
  compile:
    runs-on: ubuntu-latest
    env: 
      CI_COMMIT_MESSAGE: ontology compiled
    steps:
    - name: checkout repo
      uses: actions/checkout@v3
    - name: install rdflib
      run: pip3 install rdflib
    - name: compile graph and detect change
      uses: jannekem/run-python-script-action@v1
      with:
        script: |
          
          # import libraries
          
          import pathlib
          import rdflib
          
          # load original merged file to determine changes
          
          a = rdflib.Graph()
          a.parse(pathlib.Path.cwd() / 'ontology.ttl')

          # compile class files
          
          class_dir = pathlib.Path.cwd() / 'classes'
          classes = [x for x in class_dir.iterdir() if x.suffix == '.ttl']
          
          # load into graph
        
          b = rdflib.Graph()  
          for x in classes:
            b.parse(x)
            
          # detect changes between initial and compiled graphs
            
          set_env('CHANGE_DETECT', str(a.serialize(format='ttl') != b.serialize(format='ttl')))
          b.serialize(destination=str(pathlib.Path.cwd() / 'ontology.ttl'), format="turtle")

    - name: generate docs
      uses: jannekem/run-python-script-action@v1
      if: github.event_name == 'push' && env.CHANGE_DETECT != 'True' # reversed for the second
      with:
        script: |
          
          # import libraries
          
          import pathlib
          import rdflib
          
          md = ''
          
          # workshop intro
          
          md += '# Modelling Workshops\n'
          md += 'Owing to recent conversation around formal modelling of the FIAF Cataloguing \
            Manual and EN15907, we intend on holding a series of workshops to explicitly \
            discuss these concepts. The goal of these workshops will be to provide both a \
            formal implementation of the Cataloguing Manual (as RDF/OWL), as well as a shared \
            model which could be used for the interoperability of film data between organisations.\n\n'
          md += 'These will take place weekly, starting Thursday 12th of January at 5pm CET and \
            will be short meetings of no longer than an hour each. \n\n'
          md += '[ontology.ttl](ontology.ttl) \
            [[WebVOWL](http://vowl.visualdataweb.org/webvowl-old/webvowl-old.html#iri=https://raw.githubusercontent.com/FIAF/modelling-workshops/main/ontology.ttl)]'
          
          # write readme
          
          with open(pathlib.Path.cwd() / 'README.md', 'w') as readme:
            readme.write(md)
            
          
#           # import libraries
          
#           import pathlib
#           import rdflib
          
#           graph = rdflib.Graph()
#           graph.parse(pathlib.Path.cwd() / 'merge.ttl')
          
#           print(graph.serialize(format='ttl'))
          

          
    - name: push graph
#       if: github.event_name == 'push' && env.CHANGE_DETECT == 'True'
      if: github.event_name == 'push'
      run: |
        git config user.name 'github-actions[bot]'
        git config user.email 'github-actions[bot]@users.noreply.github.com'
        git add *
        git commit -a -m "${{ env.CI_COMMIT_MESSAGE }}"
        git push
